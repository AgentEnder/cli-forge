"use strict";(self.webpackChunk_cli_forge_docs_site=self.webpackChunk_cli_forge_docs_site||[]).push([[2016],{74230:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Home","href":"/cli-forge/","docId":"index","unlisted":false},{"type":"link","label":"Changelog","href":"/cli-forge/changelog","docId":"changelog","unlisted":false},{"type":"link","label":"Contributing","href":"/cli-forge/contributing","docId":"contributing","unlisted":false},{"type":"category","label":"Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Autogenerate CLI Documentation","href":"/cli-forge/guides/generate-docs","docId":"guides/generate-docs","unlisted":false},{"type":"link","label":"Getting Started with CLI Forge","href":"/cli-forge/guides/quick-start","docId":"guides/quick-start","unlisted":false},{"type":"link","label":"TypeScript Configuration and Setup","href":"/cli-forge/guides/typescript","docId":"guides/typescript","unlisted":false}]},{"type":"category","label":"Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arguments Of","href":"/cli-forge/examples/arguments-of","docId":"examples/arguments-of","unlisted":false},{"type":"link","label":"Basic CLI","href":"/cli-forge/examples/basic-cli","docId":"examples/basic-cli","unlisted":false},{"type":"link","label":"Option Choices","href":"/cli-forge/examples/limit-choices","docId":"examples/limit-choices","unlisted":false},{"type":"link","label":"Composable Options","href":"/cli-forge/examples/composable-options","docId":"examples/composable-options","unlisted":false},{"type":"link","label":"Configuration Files","href":"/cli-forge/examples/configuration-files","docId":"examples/configuration-files","unlisted":false},{"type":"link","label":"Conflicts and Implications","href":"/cli-forge/examples/conflicts-and-implications","docId":"examples/conflicts-and-implications","unlisted":false},{"type":"link","label":"Default Values","href":"/cli-forge/examples/default-values","docId":"examples/default-values","unlisted":false},{"type":"link","label":"Environment Options","href":"/cli-forge/examples/env-options","docId":"examples/env-options","unlisted":false},{"type":"link","label":"Interactive Subshell","href":"/cli-forge/examples/interactive-subshell","docId":"examples/interactive-subshell","unlisted":false},{"type":"link","label":"Middleware","href":"/cli-forge/examples/middleware","docId":"examples/middleware","unlisted":false},{"type":"link","label":"Object Arguments","href":"/cli-forge/examples/object-dot-notation","docId":"examples/object-dot-notation","unlisted":false},{"type":"link","label":"Option Groups","href":"/cli-forge/examples/option-groups","docId":"examples/option-groups","unlisted":false},{"type":"link","label":"Parser Only","href":"/cli-forge/examples/parser-only","docId":"examples/parser-only","unlisted":false},{"type":"link","label":"Using the Test Harness","href":"/cli-forge/examples/test-harness","docId":"examples/test-harness","unlisted":false}],"href":"/cli-forge/examples/"},{"type":"category","label":"API","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"cli-forge","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Class: TestHarness\\\\<T\\\\>","href":"/cli-forge/api/cli-forge/classes/TestHarness","docId":"api/cli-forge/classes/TestHarness","unlisted":false}]},{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: chain()","href":"/cli-forge/api/cli-forge/functions/chain","docId":"api/cli-forge/functions/chain","unlisted":false},{"type":"link","label":"Function: cli()","href":"/cli-forge/api/cli-forge/functions/cli","docId":"api/cli-forge/functions/cli","unlisted":false},{"type":"link","label":"Function: makeComposableBuilder()","href":"/cli-forge/api/cli-forge/functions/makeComposableBuilder","docId":"api/cli-forge/functions/makeComposableBuilder","unlisted":false}]},{"type":"category","label":"interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interface: CLI\\\\<TArgs\\\\>","href":"/cli-forge/api/cli-forge/interfaces/CLI","docId":"api/cli-forge/interfaces/CLI","unlisted":false},{"type":"link","label":"Interface: CLICommandOptions\\\\<TInitial, TArgs\\\\>","href":"/cli-forge/api/cli-forge/interfaces/CLICommandOptions","docId":"api/cli-forge/interfaces/CLICommandOptions","unlisted":false},{"type":"link","label":"Interface: CLIHandlerContext","href":"/cli-forge/api/cli-forge/interfaces/CLIHandlerContext","docId":"api/cli-forge/interfaces/CLIHandlerContext","unlisted":false}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: ArgumentsOf\\\\<T\\\\>","href":"/cli-forge/api/cli-forge/type-aliases/ArgumentsOf","docId":"api/cli-forge/type-aliases/ArgumentsOf","unlisted":false},{"type":"link","label":"Type Alias: Command\\\\<TInitial, TArgs\\\\>","href":"/cli-forge/api/cli-forge/type-aliases/Command","docId":"api/cli-forge/type-aliases/Command","unlisted":false},{"type":"link","label":"Type Alias: ErrorHandler()","href":"/cli-forge/api/cli-forge/type-aliases/ErrorHandler","docId":"api/cli-forge/type-aliases/ErrorHandler","unlisted":false}]},{"type":"category","label":"variables","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Variable: ConfigurationProviders","href":"/cli-forge/api/cli-forge/variables/ConfigurationProviders","docId":"api/cli-forge/variables/ConfigurationProviders","unlisted":false}]}],"href":"/cli-forge/api/cli-forge/"},{"type":"category","label":"@cli-forge/parser","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Class: ArgvParser\\\\<TArgs\\\\>","href":"/cli-forge/api/parser/classes/ArgvParser","docId":"api/parser/classes/ArgvParser","unlisted":false},{"type":"link","label":"Class: ValidationFailedError\\\\<T\\\\>","href":"/cli-forge/api/parser/classes/ValidationFailedError","docId":"api/parser/classes/ValidationFailedError","unlisted":false}]},{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: chain()","href":"/cli-forge/api/parser/functions/chain","docId":"api/parser/functions/chain","unlisted":false},{"type":"link","label":"Function: fromCamelOrDashedCaseToConstCase()","href":"/cli-forge/api/parser/functions/fromCamelOrDashedCaseToConstCase","docId":"api/parser/functions/fromCamelOrDashedCaseToConstCase","unlisted":false},{"type":"link","label":"Function: fromDashedToCamelCase()","href":"/cli-forge/api/parser/functions/fromDashedToCamelCase","docId":"api/parser/functions/fromDashedToCamelCase","unlisted":false},{"type":"link","label":"Function: getBin()","href":"/cli-forge/api/parser/functions/getBin","docId":"api/parser/functions/getBin","unlisted":false},{"type":"link","label":"Function: getEnvKey()","href":"/cli-forge/api/parser/functions/getEnvKey","docId":"api/parser/functions/getEnvKey","unlisted":false},{"type":"link","label":"Function: hideBin()","href":"/cli-forge/api/parser/functions/hideBin","docId":"api/parser/functions/hideBin","unlisted":false},{"type":"link","label":"Function: makeComposableOption()","href":"/cli-forge/api/parser/functions/makeComposableOption","docId":"api/parser/functions/makeComposableOption","unlisted":false},{"type":"link","label":"Function: parser()","href":"/cli-forge/api/parser/functions/parser","docId":"api/parser/functions/parser","unlisted":false},{"type":"link","label":"Function: readDefaultValue()","href":"/cli-forge/api/parser/functions/readDefaultValue","docId":"api/parser/functions/readDefaultValue","unlisted":false},{"type":"link","label":"Function: tryParseValue()","href":"/cli-forge/api/parser/functions/tryParseValue","docId":"api/parser/functions/tryParseValue","unlisted":false}]},{"type":"category","label":"interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interface: ObjectOptionConfig\\\\<TCoerce, TProperties\\\\>","href":"/cli-forge/api/parser/interfaces/ObjectOptionConfig","docId":"api/parser/interfaces/ObjectOptionConfig","unlisted":false},{"type":"link","label":"Interface: ReadonlyArgvParser\\\\<TArgs\\\\>","href":"/cli-forge/api/parser/interfaces/ReadonlyArgvParser","docId":"api/parser/interfaces/ReadonlyArgvParser","unlisted":false}]},{"type":"category","label":"namespaces","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"ConfigurationFiles","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: getJsonFileConfigLoader()","href":"/cli-forge/api/parser/namespaces/ConfigurationFiles/functions/getJsonFileConfigLoader","docId":"api/parser/namespaces/ConfigurationFiles/functions/getJsonFileConfigLoader","unlisted":false},{"type":"link","label":"Function: getPackageJsonConfigurationLoader()","href":"/cli-forge/api/parser/namespaces/ConfigurationFiles/functions/getPackageJsonConfigurationLoader","docId":"api/parser/namespaces/ConfigurationFiles/functions/getPackageJsonConfigurationLoader","unlisted":false},{"type":"link","label":"Function: resolveConfiguration()","href":"/cli-forge/api/parser/namespaces/ConfigurationFiles/functions/resolveConfiguration","docId":"api/parser/namespaces/ConfigurationFiles/functions/resolveConfiguration","unlisted":false}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: ConfigurationProvider\\\\<T\\\\>","href":"/cli-forge/api/parser/namespaces/ConfigurationFiles/type-aliases/ConfigurationProvider","docId":"api/parser/namespaces/ConfigurationFiles/type-aliases/ConfigurationProvider","unlisted":false}]}],"href":"/cli-forge/api/parser/namespaces/ConfigurationFiles/"}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: ArrayOptionConfig\\\\<TCoerce, TChoices\\\\>","href":"/cli-forge/api/parser/type-aliases/ArrayOptionConfig","docId":"api/parser/type-aliases/ArrayOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: BooleanOptionConfig\\\\<TCoerce, TChoices\\\\>","href":"/cli-forge/api/parser/type-aliases/BooleanOptionConfig","docId":"api/parser/type-aliases/BooleanOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: CommonOptionConfig\\\\<T, TCoerce, TChoices\\\\>","href":"/cli-forge/api/parser/type-aliases/CommonOptionConfig","docId":"api/parser/type-aliases/CommonOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: Default\\\\<T\\\\>","href":"/cli-forge/api/parser/type-aliases/Default","docId":"api/parser/type-aliases/Default","unlisted":false},{"type":"link","label":"Type Alias: DefaultValueWithDescription\\\\<T\\\\>","href":"/cli-forge/api/parser/type-aliases/DefaultValueWithDescription","docId":"api/parser/type-aliases/DefaultValueWithDescription","unlisted":false},{"type":"link","label":"Type Alias: DefaultValueWithFactory\\\\<T\\\\>","href":"/cli-forge/api/parser/type-aliases/DefaultValueWithFactory","docId":"api/parser/type-aliases/DefaultValueWithFactory","unlisted":false},{"type":"link","label":"Type Alias: EnvOptionConfig","href":"/cli-forge/api/parser/type-aliases/EnvOptionConfig","docId":"api/parser/type-aliases/EnvOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: Internal\\\\<T\\\\>","href":"/cli-forge/api/parser/type-aliases/Internal","docId":"api/parser/type-aliases/Internal","unlisted":false},{"type":"link","label":"Type Alias: InternalOptionConfig","href":"/cli-forge/api/parser/type-aliases/InternalOptionConfig","docId":"api/parser/type-aliases/InternalOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: NumberArrayOptionConfig\\\\<TCoerce, TChoices\\\\>","href":"/cli-forge/api/parser/type-aliases/NumberArrayOptionConfig","docId":"api/parser/type-aliases/NumberArrayOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: NumberOptionConfig\\\\<TCoerce, TChoices\\\\>","href":"/cli-forge/api/parser/type-aliases/NumberOptionConfig","docId":"api/parser/type-aliases/NumberOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: OptionConfig\\\\<TCoerce, TChoices, TObjectProps\\\\>","href":"/cli-forge/api/parser/type-aliases/OptionConfig","docId":"api/parser/type-aliases/OptionConfig","unlisted":false},{"type":"link","label":"Type Alias: OptionConfigToType\\\\<TOptionConfig\\\\>","href":"/cli-forge/api/parser/type-aliases/OptionConfigToType","docId":"api/parser/type-aliases/OptionConfigToType","unlisted":false},{"type":"link","label":"Type Alias: ParsedArgs\\\\<T\\\\>","href":"/cli-forge/api/parser/type-aliases/ParsedArgs","docId":"api/parser/type-aliases/ParsedArgs","unlisted":false},{"type":"link","label":"Type Alias: ParserOptions\\\\<T\\\\>","href":"/cli-forge/api/parser/type-aliases/ParserOptions","docId":"api/parser/type-aliases/ParserOptions","unlisted":false},{"type":"link","label":"Type Alias: PlainDefaultValue\\\\<T\\\\>","href":"/cli-forge/api/parser/type-aliases/PlainDefaultValue","docId":"api/parser/type-aliases/PlainDefaultValue","unlisted":false},{"type":"link","label":"Type Alias: StringArrayOptionConfig\\\\<TCoerce, TChoices\\\\>","href":"/cli-forge/api/parser/type-aliases/StringArrayOptionConfig","docId":"api/parser/type-aliases/StringArrayOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: StringOptionConfig\\\\<TCoerce, TChoices\\\\>","href":"/cli-forge/api/parser/type-aliases/StringOptionConfig","docId":"api/parser/type-aliases/StringOptionConfig","unlisted":false},{"type":"link","label":"Type Alias: UndefinedIfRequiredAndNoDefault\\\\<TOptionConfig, ResolvedValue\\\\>","href":"/cli-forge/api/parser/type-aliases/UndefinedIfRequiredAndNoDefault","docId":"api/parser/type-aliases/UndefinedIfRequiredAndNoDefault","unlisted":false}]}],"href":"/cli-forge/api/parser/"}]},{"type":"category","label":"CLI Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"generate-documentation","href":"/cli-forge/cli/generate-documentation","docId":"cli/generate-documentation","unlisted":false},{"type":"link","label":"init","href":"/cli-forge/cli/init","docId":"cli/init","unlisted":false}],"href":"/cli-forge/cli/"}]},"docs":{"api/cli-forge/classes/TestHarness":{"id":"api/cli-forge/classes/TestHarness","title":"Class: TestHarness\\\\<T\\\\>","description":"Utility for testing CLI instances. Can check argument parsing and validation, including","sidebar":"tutorialSidebar"},"api/cli-forge/functions/chain":{"id":"api/cli-forge/functions/chain","title":"Function: chain()","description":"chain\\\\(initial, fn0, fn1, fn2, fn3, fn4, fn5, fn6, fn7, fn8, fn9, fn10, fn11, fn12, fn13, fn14, fn15): R","sidebar":"tutorialSidebar"},"api/cli-forge/functions/cli":{"id":"api/cli-forge/functions/cli","title":"Function: cli()","description":"cli\\\\(name, rootCommandConfiguration?): CLI\\\\","sidebar":"tutorialSidebar"},"api/cli-forge/functions/makeComposableBuilder":{"id":"api/cli-forge/functions/makeComposableBuilder","title":"Function: makeComposableBuilder()","description":"makeComposableBuilder\\\\(fn): \\\\(init) => CLI\\\\","sidebar":"tutorialSidebar"},"api/cli-forge/index":{"id":"api/cli-forge/index","title":"cli-forge","description":"References","sidebar":"tutorialSidebar"},"api/cli-forge/interfaces/CLI":{"id":"api/cli-forge/interfaces/CLI","title":"Interface: CLI\\\\<TArgs\\\\>","description":"The interface for a CLI application or subcommands.","sidebar":"tutorialSidebar"},"api/cli-forge/interfaces/CLICommandOptions":{"id":"api/cli-forge/interfaces/CLICommandOptions","title":"Interface: CLICommandOptions\\\\<TInitial, TArgs\\\\>","description":"Represents the configuration needed to create a CLI command.","sidebar":"tutorialSidebar"},"api/cli-forge/interfaces/CLIHandlerContext":{"id":"api/cli-forge/interfaces/CLIHandlerContext","title":"Interface: CLIHandlerContext","description":"Properties","sidebar":"tutorialSidebar"},"api/cli-forge/type-aliases/ArgumentsOf":{"id":"api/cli-forge/type-aliases/ArgumentsOf","title":"Type Alias: ArgumentsOf\\\\<T\\\\>","description":"ArgumentsOf\\\\ never","sidebar":"tutorialSidebar"},"api/cli-forge/type-aliases/Command":{"id":"api/cli-forge/type-aliases/Command","title":"Type Alias: Command\\\\<TInitial, TArgs\\\\>","description":"Command\\\\: object & CLICommandOptions\\\\ \\\\| CLI\\\\","sidebar":"tutorialSidebar"},"api/cli-forge/type-aliases/ErrorHandler":{"id":"api/cli-forge/type-aliases/ErrorHandler","title":"Type Alias: ErrorHandler()","description":"ErrorHandler: (e, actions) => void","sidebar":"tutorialSidebar"},"api/cli-forge/variables/ConfigurationProviders":{"id":"api/cli-forge/variables/ConfigurationProviders","title":"Variable: ConfigurationProviders","description":"const ConfigurationProviders: object","sidebar":"tutorialSidebar"},"api/parser/classes/ArgvParser":{"id":"api/parser/classes/ArgvParser","title":"Class: ArgvParser\\\\<TArgs\\\\>","description":"The main parser class. This class is used to configure and parse arguments.","sidebar":"tutorialSidebar"},"api/parser/classes/ValidationFailedError":{"id":"api/parser/classes/ValidationFailedError","title":"Class: ValidationFailedError\\\\<T\\\\>","description":"Extends","sidebar":"tutorialSidebar"},"api/parser/functions/chain":{"id":"api/parser/functions/chain","title":"Function: chain()","description":"chain\\\\(initial, fn0, fn1, fn2, fn3, fn4, fn5, fn6, fn7, fn8, fn9, fn10, fn11, fn12, fn13, fn14, fn15): R","sidebar":"tutorialSidebar"},"api/parser/functions/fromCamelOrDashedCaseToConstCase":{"id":"api/parser/functions/fromCamelOrDashedCaseToConstCase","title":"Function: fromCamelOrDashedCaseToConstCase()","description":"fromCamelOrDashedCaseToConstCase(str): string","sidebar":"tutorialSidebar"},"api/parser/functions/fromDashedToCamelCase":{"id":"api/parser/functions/fromDashedToCamelCase","title":"Function: fromDashedToCamelCase()","description":"fromDashedToCamelCase(str): string","sidebar":"tutorialSidebar"},"api/parser/functions/getBin":{"id":"api/parser/functions/getBin","title":"Function: getBin()","description":"getBin(argv): string","sidebar":"tutorialSidebar"},"api/parser/functions/getEnvKey":{"id":"api/parser/functions/getEnvKey","title":"Function: getEnvKey()","description":"getEnvKey(prefix, key): string","sidebar":"tutorialSidebar"},"api/parser/functions/hideBin":{"id":"api/parser/functions/hideBin","title":"Function: hideBin()","description":"hideBin(argv): string[]","sidebar":"tutorialSidebar"},"api/parser/functions/makeComposableOption":{"id":"api/parser/functions/makeComposableOption","title":"Function: makeComposableOption()","description":"makeComposableOption\\\\(name, config) Object[TOptionConfig[\\"type\\"]] : InferTChoice> }`\\\\>","sidebar":"tutorialSidebar"},"api/parser/functions/parser":{"id":"api/parser/functions/parser","title":"Function: parser()","description":"parser(opts?): ArgvParser\\\\","sidebar":"tutorialSidebar"},"api/parser/functions/readDefaultValue":{"id":"api/parser/functions/readDefaultValue","title":"Function: readDefaultValue()","description":"readDefaultValue\\\\(option): [OptionConfigToType\\\\ \\\\| undefined, string \\\\| undefined]","sidebar":"tutorialSidebar"},"api/parser/functions/tryParseValue":{"id":"api/parser/functions/tryParseValue","title":"Function: tryParseValue()","description":"tryParseValue(parser, input): any","sidebar":"tutorialSidebar"},"api/parser/index":{"id":"api/parser/index","title":"@cli-forge/parser","description":"Namespaces","sidebar":"tutorialSidebar"},"api/parser/interfaces/ObjectOptionConfig":{"id":"api/parser/interfaces/ObjectOptionConfig","title":"Interface: ObjectOptionConfig\\\\<TCoerce, TProperties\\\\>","description":"Extends","sidebar":"tutorialSidebar"},"api/parser/interfaces/ReadonlyArgvParser":{"id":"api/parser/interfaces/ReadonlyArgvParser","title":"Interface: ReadonlyArgvParser\\\\<TArgs\\\\>","description":"Type Parameters","sidebar":"tutorialSidebar"},"api/parser/namespaces/ConfigurationFiles/functions/getJsonFileConfigLoader":{"id":"api/parser/namespaces/ConfigurationFiles/functions/getJsonFileConfigLoader","title":"Function: getJsonFileConfigLoader()","description":"getJsonFileConfigLoader\\\\(filename, transform?): ConfigurationProvider\\\\","sidebar":"tutorialSidebar"},"api/parser/namespaces/ConfigurationFiles/functions/getPackageJsonConfigurationLoader":{"id":"api/parser/namespaces/ConfigurationFiles/functions/getPackageJsonConfigurationLoader","title":"Function: getPackageJsonConfigurationLoader()","description":"getPackageJsonConfigurationLoader\\\\(key): ConfigurationProvider\\\\","sidebar":"tutorialSidebar"},"api/parser/namespaces/ConfigurationFiles/functions/resolveConfiguration":{"id":"api/parser/namespaces/ConfigurationFiles/functions/resolveConfiguration","title":"Function: resolveConfiguration()","description":"resolveConfiguration\\\\(configurationRoot, loaders): T","sidebar":"tutorialSidebar"},"api/parser/namespaces/ConfigurationFiles/index":{"id":"api/parser/namespaces/ConfigurationFiles/index","title":"ConfigurationFiles","description":"Types and utilities for working with configuration files.","sidebar":"tutorialSidebar"},"api/parser/namespaces/ConfigurationFiles/type-aliases/ConfigurationProvider":{"id":"api/parser/namespaces/ConfigurationFiles/type-aliases/ConfigurationProvider","title":"Type Alias: ConfigurationProvider\\\\<T\\\\>","description":"ConfigurationProvider\\\\: object","sidebar":"tutorialSidebar"},"api/parser/type-aliases/ArrayOptionConfig":{"id":"api/parser/type-aliases/ArrayOptionConfig","title":"Type Alias: ArrayOptionConfig\\\\<TCoerce, TChoices\\\\>","description":"ArrayOptionConfig\\\\: StringArrayOptionConfig\\\\ \\\\| NumberArrayOptionConfig\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/BooleanOptionConfig":{"id":"api/parser/type-aliases/BooleanOptionConfig","title":"Type Alias: BooleanOptionConfig\\\\<TCoerce, TChoices\\\\>","description":"BooleanOptionConfig\\\\: object & CommonOptionConfig\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/CommonOptionConfig":{"id":"api/parser/type-aliases/CommonOptionConfig","title":"Type Alias: CommonOptionConfig\\\\<T, TCoerce, TChoices\\\\>","description":"CommonOptionConfig\\\\: object","sidebar":"tutorialSidebar"},"api/parser/type-aliases/Default":{"id":"api/parser/type-aliases/Default","title":"Type Alias: Default\\\\<T\\\\>","description":"Default\\\\: PlainDefaultValue\\\\ \\\\| DefaultValueWithDescription\\\\ \\\\| DefaultValueWithFactory\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/DefaultValueWithDescription":{"id":"api/parser/type-aliases/DefaultValueWithDescription","title":"Type Alias: DefaultValueWithDescription\\\\<T\\\\>","description":"DefaultValueWithDescription\\\\: object","sidebar":"tutorialSidebar"},"api/parser/type-aliases/DefaultValueWithFactory":{"id":"api/parser/type-aliases/DefaultValueWithFactory","title":"Type Alias: DefaultValueWithFactory\\\\<T\\\\>","description":"DefaultValueWithFactory\\\\: object","sidebar":"tutorialSidebar"},"api/parser/type-aliases/EnvOptionConfig":{"id":"api/parser/type-aliases/EnvOptionConfig","title":"Type Alias: EnvOptionConfig","description":"EnvOptionConfig: object","sidebar":"tutorialSidebar"},"api/parser/type-aliases/Internal":{"id":"api/parser/type-aliases/Internal","title":"Type Alias: Internal\\\\<T\\\\>","description":"Internal\\\\: T & InternalOptionConfig","sidebar":"tutorialSidebar"},"api/parser/type-aliases/InternalOptionConfig":{"id":"api/parser/type-aliases/InternalOptionConfig","title":"Type Alias: InternalOptionConfig","description":"InternalOptionConfig: OptionConfig & object","sidebar":"tutorialSidebar"},"api/parser/type-aliases/NumberArrayOptionConfig":{"id":"api/parser/type-aliases/NumberArrayOptionConfig","title":"Type Alias: NumberArrayOptionConfig\\\\<TCoerce, TChoices\\\\>","description":"NumberArrayOptionConfig\\\\: object & CommonOptionConfig\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/NumberOptionConfig":{"id":"api/parser/type-aliases/NumberOptionConfig","title":"Type Alias: NumberOptionConfig\\\\<TCoerce, TChoices\\\\>","description":"NumberOptionConfig\\\\: object & CommonOptionConfig\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/OptionConfig":{"id":"api/parser/type-aliases/OptionConfig","title":"Type Alias: OptionConfig\\\\<TCoerce, TChoices, TObjectProps\\\\>","description":"OptionConfig\\\\: StringOptionConfig\\\\ \\\\| NumberOptionConfig\\\\ \\\\| ArrayOptionConfig\\\\ \\\\| BooleanOptionConfig\\\\ \\\\| ObjectOptionConfig\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/OptionConfigToType":{"id":"api/parser/type-aliases/OptionConfigToType","title":"Type Alias: OptionConfigToType\\\\<TOptionConfig\\\\>","description":"OptionConfigToType\\\\ object\\\\[TOptionConfig\\\\[\\"type\\"\\\\]\\\\] : InferTChoice\\\\\\\\>","sidebar":"tutorialSidebar"},"api/parser/type-aliases/ParsedArgs":{"id":"api/parser/type-aliases/ParsedArgs","title":"Type Alias: ParsedArgs\\\\<T\\\\>","description":"ParsedArgs\\\\ object & T","sidebar":"tutorialSidebar"},"api/parser/type-aliases/ParserOptions":{"id":"api/parser/type-aliases/ParserOptions","title":"Type Alias: ParserOptions\\\\<T\\\\>","description":"ParserOptions\\\\: object","sidebar":"tutorialSidebar"},"api/parser/type-aliases/PlainDefaultValue":{"id":"api/parser/type-aliases/PlainDefaultValue","title":"Type Alias: PlainDefaultValue\\\\<T\\\\>","description":"PlainDefaultValue\\\\: T","sidebar":"tutorialSidebar"},"api/parser/type-aliases/StringArrayOptionConfig":{"id":"api/parser/type-aliases/StringArrayOptionConfig","title":"Type Alias: StringArrayOptionConfig\\\\<TCoerce, TChoices\\\\>","description":"StringArrayOptionConfig\\\\: object & CommonOptionConfig\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/StringOptionConfig":{"id":"api/parser/type-aliases/StringOptionConfig","title":"Type Alias: StringOptionConfig\\\\<TCoerce, TChoices\\\\>","description":"StringOptionConfig\\\\: object & CommonOptionConfig\\\\","sidebar":"tutorialSidebar"},"api/parser/type-aliases/UndefinedIfRequiredAndNoDefault":{"id":"api/parser/type-aliases/UndefinedIfRequiredAndNoDefault","title":"Type Alias: UndefinedIfRequiredAndNoDefault\\\\<TOptionConfig, ResolvedValue\\\\>","description":"UndefinedIfRequiredAndNoDefault\\\\ TOptionConfig extends object ? ResolvedValue : ResolvedValue \\\\| undefined","sidebar":"tutorialSidebar"},"changelog":{"id":"changelog","title":"Changelog","description":"0.10.1 (2024-09-20)","sidebar":"tutorialSidebar"},"cli/generate-documentation":{"id":"cli/generate-documentation","title":"generate-documentation","description":"Usage: cli-forge generate-documentation","sidebar":"tutorialSidebar"},"cli/index":{"id":"cli/index","title":"cli-forge","description":"Usage: cli-forge","sidebar":"tutorialSidebar"},"cli/init":{"id":"cli/init","title":"init","description":"Usage: cli-forge init","sidebar":"tutorialSidebar"},"contributing":{"id":"contributing","title":"Contributing","description":"Thank you for your interest in contributing to our project! We welcome contributions from the community to help improve our project and make it even better.","sidebar":"tutorialSidebar"},"examples/arguments-of":{"id":"examples/arguments-of","title":"Arguments Of","description":"When building a CLI, and especially if taking advantage of [composition](./composable-options), it can be necessary to have a typescript type that respresents the resolved arguments of a CLI command. For example, if you abstract the handler of a command into a separate function, the argument of that function would be typed as the arguments of the CLI command.\\n\\nCLI Forge provides the `ArgumentsOf` type to help with this. It takes a CLI instance or a function that returns a CLI instance and returns the type of the arguments that the CLI command handler will receive. There are some difficulties with typescript support for circular references, so its usage isn\'t perfect, but if used with composable builders directly you avoid these problems.\\n","sidebar":"tutorialSidebar"},"examples/basic-cli":{"id":"examples/basic-cli","title":"Basic CLI","description":"This is a simple example that demonstrates how to create a basic CLI using cli-forge\\n","sidebar":"tutorialSidebar"},"examples/composable-options":{"id":"examples/composable-options","title":"Composable Options","description":"This example demonstrates how to extract common options into a reusable function, to share\\nacross multiple commands.\\n\\nThe main idea is to create a function that takes an initial CLI and performs some operations on it to be used in a command\'s builder function. If you extract multiple of these, you can use `chain` to compose them together. There is also a helper called `makeComposableBuilder` that can be used to create these composable builders, without having to worry about getting the type annotations correct.\\n\\nIf you are only useing @cli-forge/parser, `chain` is still available to use and a different helper, `makeComposableOption` is available to create composable options. These would be used like below:\\n```typescript\\nconst withName = makeComposableOption(\'name\', {\\n  type: \'string\',\\n});\\nconst initialParser = new ArgvParser();\\nconst parser = chain(initialParser, withName, /* ... */);\\n```\\n\\nNote: This example goes really far with the composable options, and is likely overkill for most CLI commands. In general, I\'d only recommend extracting options into a composable builder if they are shared across multiple commands. If the options are only used in a single command, it\'s probably best to keep them in the command builder directly.\\n","sidebar":"tutorialSidebar"},"examples/configuration-files":{"id":"examples/configuration-files","title":"Configuration Files","description":"This example demonstrates how to enable loading arguments from a configuration file. The `.config()` method configures the CLI to load arguments from a configuration file. The method takes a single argument, a `ConfigurationProvider`. [See the docs for `ConfigurationProvider` here](/api/parser/namespaces/ConfigurationFiles/type-aliases/ConfigurationProvider).\\n\\nFor convenience, `cli-forge` exports some built-in configuration providers. Currently, there are two built-in configuration providers: `JsonFile` and `PackageJson`.\\n\\nUsage of each of these is demonstrated below. Note that when using multiple configuration files, the order in which they are loaded is important. The last configuration file loaded will override any previously loaded configuration files.\\n\\nWhen both environment variables and configuration files are used, the order of precedence is as follows:\\n- CLI Arguments\\n- Environment Variables\\n- Configuration Files\\n- Default Values\\n\\nThis is based on the idea of highest specificity. CLI Arguments are always provided directly by the user. Environment variables can change system-to-system. Configuration files are specific to the project. Default values are equal for all instances of the CLI.\\n","sidebar":"tutorialSidebar"},"examples/conflicts-and-implications":{"id":"examples/conflicts-and-implications","title":"Conflicts and Implications","description":"This example illustrates how `.conflicts()` and `.implies()` can be used to enforce mutually exclusive options and mutually required options, respectively.\\n","sidebar":"tutorialSidebar"},"examples/default-values":{"id":"examples/default-values","title":"Default Values","description":"This is a simple example that demonstrates the various ways you can set default values for options.\\n\\nThe default value can be set via the `default` property in an option definition. This can be done in three ways:\\n- Setting the `default` property to a value directly\\n- Setting the `default` property to an object containing function that returns a value and a description\\n- Setting the `default` property to an object containing a value and a description\\n\\nSetting the `default` property to a value directly is the simplest way to set a default value, but can lead to some odd behavior if the value isn\'t consistent. For example, if the default value is the value of an environment variable that may differ among users then the actual default value will be different for each user. In this case in documentation, it would be better to tell users a description of the default value rather than the actual value.\\n","sidebar":"tutorialSidebar"},"examples/env-options":{"id":"examples/env-options","title":"Environment Options","description":"This example demonstrates how you can register options that are set via environment variables. There are two levels\\nof environment variable support:\\n- Global: By calling `.env()` on the CLI instance or parser, you can enable environment variable support for all options.\\n- Local: By providing an `env` key on an option, you can enable or disable environment variable support for that option only.\\n\\nIn either case, there are a few common properties to be aware of:\\n- Prefix: Set via `prefix` on the object passed to .env(), or disabled by passing `false` with the `env` property on an option. Setting a prefix will automatically add the prefix to the environment variable key. When calling `.env()` on a CLI, the prefix defaults to the top-level command name.\\n- Reflect: By default if environment variable handling is enabled, environment variables are reflected to `process.env`. This can be disabled by passing `{reflect: false}` to `.env()` or setting `env` to contain `{reflect: false}` on an option.\\n- Populate: By default if environment variable handling is enabled, environment variables are used to populate options. This can be disabled by passing `{populate: false}` to `.env()` or setting `env` to contain `{populate: false}` on an option. This allows you to reflect environment variables to `process.env` without populating options from the env.\\n- Key: The key used when populating an option from env or reflecting to `process.env`. By default, the key is the option name in upper snake case. This can be overridden by setting the `env` key on an option.\\n\\nOptions passed on the command line will always take precedence over environment variables. Environment variables override configuration files as well as default values.\\n","sidebar":"tutorialSidebar"},"examples/examples":{"id":"examples/examples","title":"Examples","description":"- Arguments Of","sidebar":"tutorialSidebar"},"examples/interactive-subshell":{"id":"examples/interactive-subshell","title":"Interactive Subshell","description":"This example demonstrates how to create an interactive subshell using cli-forge. The subshell is a simple REPL that can execute commands or shell commands. To launch the subshell, run the script with no arguments, or a command that contains subcommands and no handler.\\nThe subshell presents a prompt that includes the current command chain, and executes the command when the user presses enter. If the command is not recognized, it is executed as a shell command. Notably, the subshell is very basic. It does not currently support command history, tab completion, or other advanced features.\\n","sidebar":"tutorialSidebar"},"examples/limit-choices":{"id":"examples/limit-choices","title":"Option Choices","description":"This is a simple example that demonstrates how to limit choices for a given option.\\n\\nChoices are checked after `coerce` if it is also provided, so be sure that the `coerce` function returns a value that is in the choices array.\\n\\nChoices can be provided as an array of valid values or as a function that returns an array of valid values. Note that when returning the array from a function, providing \\"as const\\" is necessary to narrow the typing of the argument. This may not be possible if the choices are dynamic or need to be calculated at runtime, in which case the typing will remain as a broader type (e.g. `string` instead of `\'a\' | \'b\'`).\\n","sidebar":"tutorialSidebar"},"examples/middleware":{"id":"examples/middleware","title":"Middleware","description":"This is a simple example that demonstrates how to register middleware that run before the command handler.\\nMiddleware can do **a lot** of things.  Almost everything that middleware can do could be done at the beginning\\nof the handler function, but middleware keeps the handler clean and focused on the command\'s behavior as well\\nas being much more composable.\\n\\nSome things middleware can do:\\n- Modify the arguments object\\n- Perform validation that takes multiple arguments into account\\n- Perform side effects\\n","sidebar":"tutorialSidebar"},"examples/object-dot-notation":{"id":"examples/object-dot-notation","title":"Object Arguments","description":"This is a simple example that demonstrates passing object-valued options to a command. Note that\\nthe object-valued options are passed as dot-notation strings. These can be nested for complex option\\nstructures that contain object properties that are themselves objects.\\n\\n> Note: This example is a bit more abstract that the others, as real world use cases for object-valued\\n> options and especially nested objects are less common. This example is included to demonstrate the\\n> flexibility of the CLI Forge APIs and the ability to handle complex option structures with type safety.\\n","sidebar":"tutorialSidebar"},"examples/option-groups":{"id":"examples/option-groups","title":"Option Groups","description":"Options can be grouped together in the help output by using the `group` method. This will also affect generated documentation. The `sortOrder` parameter can be used to control the order in which groups are displayed. Lower values will be displayed first. If two groups have the same `sortOrder`, they will be sorted alphabetically.\\n\\nOptions can be placed in a group in one of 2 ways:\\n- An explicit call to `.group` as part of the command\'s builder function.\\n- By passing a `group` property in the option definition.\\n","sidebar":"tutorialSidebar"},"examples/parser-only":{"id":"examples/parser-only","title":"Parser Only","description":"This example demonstrates how to use [@cli-forge/parser](https://npmjs.com/@cli-forge/parser) to interpret CLI arguments\\nwithout the need for a CLI framework. For single-command CLIs, this may be enough.\\n","sidebar":"tutorialSidebar"},"examples/test-harness":{"id":"examples/test-harness","title":"Using the Test Harness","description":"This is a simple example that demonstrates how to create a basic CLI using cli-forge\\n","sidebar":"tutorialSidebar"},"guides/generate-docs":{"id":"guides/generate-docs","title":"Autogenerate CLI Documentation","description":"Any CLI that is written with CLI forge can utilize npx cli-forge generate-docs to generate documentation.","sidebar":"tutorialSidebar"},"guides/quick-start":{"id":"guides/quick-start","title":"Getting Started with CLI Forge","description":"As CLI Forge is focused on first class TypeScript support, this guide will assume you are using TypeScript. If you are not using TypeScript, you can still use CLI Forge, and can pass --format js to the cli-forge init command when getting started. The runtime functionality of your CLI will not be affected by this choice, but you will lose out on the type safety and intellisense that TypeScript provides.","sidebar":"tutorialSidebar"},"guides/typescript":{"id":"guides/typescript","title":"TypeScript Configuration and Setup","description":"CLI Forge is built with first class TypeScript support. This enables you to write your cli commands in typescript and take advantage of the type safety and intellisense that TypeScript provides for every option you expect.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Home","description":"CLI Forge Logo","sidebar":"tutorialSidebar"}}}}')}}]);