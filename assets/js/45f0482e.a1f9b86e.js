"use strict";(self.webpackChunk_cli_forge_docs_site=self.webpackChunk_cli_forge_docs_site||[]).push([[3811],{35136:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>g,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var s=a(62540),o=a(43023);const t={id:"basic-cli",title:"Basic CLI",description:"This is a simple example that demonstrates how to create a basic CLI using cli-forge\n",hide_title:!0},i="Basic CLI",l={id:"examples/basic-cli",title:"Basic CLI",description:"This is a simple example that demonstrates how to create a basic CLI using cli-forge\n",source:"@site/docs/examples/basic-cli.md",sourceDirName:"examples",slug:"/examples/basic-cli",permalink:"/cli-forge/examples/basic-cli",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"basic-cli",title:"Basic CLI",description:"This is a simple example that demonstrates how to create a basic CLI using cli-forge\n",hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Arguments Of",permalink:"/cli-forge/examples/arguments-of"},next:{title:"Option Choices",permalink:"/cli-forge/examples/limit-choices"}},r={},c=[{value:"Code",id:"code",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"basic-cli",children:"Basic CLI"})}),"\n",(0,s.jsx)(n.p,{children:"This is a simple example that demonstrates how to create a basic CLI using cli-forge"}),"\n",(0,s.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="Basic CLI" showLineNumbers',children:"import cliForge from 'cli-forge';\n\nconst cli = cliForge('basic-cli')\n  // Requires a command to be provided\n  .demandCommand()\n\n  // Registers \"hello\" command\n  .command('hello', {\n    // Builder is used to define the command's options\n    builder: (args) =>\n      args.option('name', {\n        type: 'string',\n        description: 'The name to say hello to',\n        default: 'World',\n      }),\n    // Handler is used to define the command's behavior\n    handler: (args) => {\n      // Note: name is always defined because it has a default value.\n      console.log(`Hello, ${args.name}!`);\n    },\n  })\n  .command('goodbye', {\n    builder: (args) =>\n      args\n        .option('name', {\n          type: 'string',\n          description: 'The name to say goodbye to',\n          default: 'World',\n        })\n        .option('excited', {\n          type: 'boolean',\n          description: 'Whether to say goodbye excitedly',\n        }),\n    handler: (args) => {\n      // Note the typing of `args` here. It's inferred from the builder.\n      // The `name` option is always defined because it has a default value.\n      // The `excited` option is optional because it doesn't have a default value.\n      console.log(`Goodbye, ${args.name}${args.excited ? '!' : '.'}`);\n    },\n  });\n\n// We export the CLI for a few reasons:\n// - Testing\n// - Composition (a CLI can be a subcommand of another CLI)\n// - Docs generation\nexport default cli;\n\n// Calling `.forge()` executes the CLI. It's single parameter is the CLI args\n// and they default to `process.argv.slice(2)`.\nif (require.main === module) {\n  (async () => {\n    await cli.forge();\n  })();\n}\n\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/playground/#PTAEBUAsFNQMwPYBskIO4EsB2BzUTtYATBaAZywHIAXUE0AQywE9rJs8AnaBlZgGlCcGbaJ1AZa1aCjIAoEKFERmAB2gBlAMacMq2qqQNmOTggCuWIksgibGMqDI69tMpAtJrAI1jQAbrzmItDWDI4MoFgIRNAAVo7OuvoAdHIYALaqCJy0AN4AvvBmGaCU0bEAXHBklHLpWTm0WgQAYjk4sHAlZS0YALSInJ2UANz1WghYZM0EoAC8oH3tw9AAFJTe4Rha-X2UAJRyoKCKAErQAI7mGNwRSwgZGUzW1AigvqCqZv4YsUTHUApWLPKwAYUeoKIayOgPO0BwDmknEcACIYCgEKiHk8XoCUpNcVYNhjUJRBHlASdFAAhG5eMQSRzmMihJTvWJwQg2WCEqGURwIfQYKbyE4nbz02KcSqgNYMYZkA4LAB8VPFCpwZBSQuoIqwGywDAy0HJoEp4stSjU0FlAuoulw5PVltiSVc+rtUFgRpN7KcxlApPeb2dVvFnIY5iQ1DtAHUcl4w1aCgd+OrFAAJF5IRkOUAstlvOjQLlYWDKPkvAUfaC2X45dW2Ky5mVyzVK1Xml2nMAAOQQ0llvtg+d4aGMjk5hB80C0UdZElotnukejtECSHM0DS4cm02QO9QODWAANMzJUIIACR5DspEcFACEp4O40tBXTJ1T+KrxMoOAIDE3jMKaFLqpKGAMm28qKsq8xquGHY9icOrClMhrGmB3bhpa1A2naMyOjgya4SW7roVgXowFEWH+mQgaAcBoHsqRuFrjG8aJkQbEfkcZFoXqGGUNAAAeWiSKEZoWmR1rqHa3hAbmTC8VabouJR8YwKI4jFgxzCgExRAgX44mSUQSDMKp35pk2OZiLKsFavBKo4VaigDtIPJyRwoAIHAoCnh2p5BmIO6gAAktQNbYHAYjcNY3SPN5kHQbu7lgN6gUjiFur6kyjBIBOzBTqWM61vOhZLkG4SMCWcBRjGoCbtu6WWooWWnmJEnSEQuWUQVeVTLwFULqOtAkOQVDLgw-iwJEHEbkEO49vuZCHikx5ngA4kBxmgTed6Kg+WEFLe97deZoAAPxlE+lCgHaKSUAUr7vuKn6Aqm4wKGAcamdkuTeWCAAyEXwDkdVxWgQg8Ot0yVL9oD9BA5B6rgSMoxCjRkJI+XyqAoPg-OWC1nVZDmN4f7WP5jDRDphNg0cigowAIggWiOJ05bCEJWByGJgMTaWjWzBgP2KGCvAELggUpEMnQwiFYlzuY0iOMoRMpJF0WJBwuZfAqWHIgVmtg4wipIy8PIGYt-qnt8HPkNqmr+CkZAEFo6wAEwHKeaQYAFazcNctw7s82ALPMiwZDE0bQMqMnymQzBYFocouW5JwMBOkhLAQ8sdOsb5fQcMLjAUchAA",children:"View on TypeScript Playground"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"node ./basic-cli.js hello --name sir\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"node ./basic-cli.js goodbye --name madame\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"These examples are ran as e2e tests on pull-requests and releases to verify they are accurate and up to date. If you see any issues, please open an issue on the github repo."}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},43023:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var s=a(63696);const o={},t=s.createContext(o);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);