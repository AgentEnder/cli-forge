"use strict";(self.webpackChunk_cli_forge_docs_site=self.webpackChunk_cli_forge_docs_site||[]).push([[1546],{53644:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>t});var o=i(62540),r=i(43023);const s={},l="Type Alias: CommonOptionConfig<T, TCoerce, TChoices>",d={id:"api/parser/type-aliases/CommonOptionConfig",title:"Type Alias: CommonOptionConfig\\<T, TCoerce, TChoices\\>",description:"CommonOptionConfig\\: object",source:"@site/docs/api/parser/type-aliases/CommonOptionConfig.md",sourceDirName:"api/parser/type-aliases",slug:"/api/parser/type-aliases/CommonOptionConfig",permalink:"/cli-forge/api/parser/type-aliases/CommonOptionConfig",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Type Alias: BooleanOptionConfig\\<TCoerce, TChoices\\>",permalink:"/cli-forge/api/parser/type-aliases/BooleanOptionConfig"},next:{title:"Type Alias: Default\\<T\\>",permalink:"/cli-forge/api/parser/type-aliases/Default"}},c={},t=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Type declaration",id:"type-declaration",level:2},{value:"alias?",id:"alias",level:3},{value:"choices?",id:"choices",level:3},{value:"coerce()?",id:"coerce",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"default?",id:"default",level:3},{value:"deprecated?",id:"deprecated",level:3},{value:"description?",id:"description",level:3},{value:"env?",id:"env",level:3},{value:"group?",id:"group",level:3},{value:"hidden?",id:"hidden",level:3},{value:"positional?",id:"positional",level:3},{value:"required?",id:"required",level:3},{value:"validate()?",id:"validate",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"type-alias-commonoptionconfigt-tcoerce-tchoices",children:"Type Alias: CommonOptionConfig<T, TCoerce, TChoices>"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"CommonOptionConfig"}),"<",(0,o.jsx)(n.code,{children:"T"}),", ",(0,o.jsx)(n.code,{children:"TCoerce"}),", ",(0,o.jsx)(n.code,{children:"TChoices"}),">: ",(0,o.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"T"})]}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"TCoerce"})," = ",(0,o.jsx)(n.code,{children:"T"})]}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"TChoices"})," = ",(0,o.jsx)(n.code,{children:"T"}),"[]"]}),"\n",(0,o.jsx)(n.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,o.jsx)(n.h3,{id:"alias",children:"alias?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"alias"}),": ",(0,o.jsx)(n.code,{children:"string"}),"[]"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Provide an array of aliases for the option."}),"\n",(0,o.jsx)(n.h3,{id:"choices",children:"choices?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"choices"}),": ",(0,o.jsx)(n.code,{children:"TChoices"})," | () => ",(0,o.jsx)(n.code,{children:"TChoices"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Provide an array of choices for the option. Values not in the array will throw an error."}),"\n",(0,o.jsx)(n.h3,{id:"coerce",children:"coerce()?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"coerce"}),": (",(0,o.jsx)(n.code,{children:"value"}),") => ",(0,o.jsx)(n.code,{children:"TCoerce"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Provide a function to coerce the value of the option."}),"\n",(0,o.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"value"}),": ",(0,o.jsx)(n.code,{children:"T"})]}),"\n",(0,o.jsx)(n.p,{children:"Value of the option"}),"\n",(0,o.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"TCoerce"})}),"\n",(0,o.jsx)(n.p,{children:"Coerced value of the option"}),"\n",(0,o.jsx)(n.h3,{id:"default",children:"default?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"default"}),": ",(0,o.jsx)(n.a,{href:"/cli-forge/api/parser/type-aliases/Default",children:(0,o.jsx)(n.code,{children:"Default"})}),"<",(0,o.jsx)(n.code,{children:"T"}),">"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Provide a default value for the option."}),"\n",(0,o.jsx)(n.p,{children:"If the default value is a tuple, the first value will be used as the default value, and the second value will be used as the description."}),"\n",(0,o.jsx)(n.h3,{id:"deprecated",children:"deprecated?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"deprecated"}),": ",(0,o.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If set, the option will be marked as deprecated, with the provided message. This will not effect runtime behavior,\nbut will be displayed in help output and generated docs."}),"\n",(0,o.jsx)(n.h3,{id:"description",children:"description?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"description"}),": ",(0,o.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Provide a description for the option."}),"\n",(0,o.jsx)(n.h3,{id:"env",children:"env?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"env"}),": ",(0,o.jsx)(n.code,{children:"string"})," | ",(0,o.jsx)(n.code,{children:"boolean"})," | ",(0,o.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["If set, the option will be populated from the environment variable ",(0,o.jsx)(n.code,{children:"${env}_${optionName}"}),".\nIf set to true, the environment variable will be ",(0,o.jsx)(n.code,{children:"${optionName}"}),".\nIf explicitly set to false, environment variable population will be disabled for this option."]}),"\n",(0,o.jsx)(n.h3,{id:"group",children:"group?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"group"}),": ",(0,o.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Can be set to group options in help output and generated docs."}),"\n",(0,o.jsx)(n.h3,{id:"hidden",children:"hidden?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"hidden"}),": ",(0,o.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If true, the option will not be displayed in help output or generated docs."}),"\n",(0,o.jsx)(n.h3,{id:"positional",children:"positional?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"positional"}),": ",(0,o.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If set to true, the option will be treated as a positional argument."}),"\n",(0,o.jsx)(n.h3,{id:"required",children:"required?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"required"}),": ",(0,o.jsx)(n.code,{children:"boolean"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If true, the option is required."}),"\n",(0,o.jsx)(n.h3,{id:"validate",children:"validate()?"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"optional"})," ",(0,o.jsx)(n.strong,{children:"validate"}),": (",(0,o.jsx)(n.code,{children:"value"}),") => ",(0,o.jsx)(n.code,{children:"boolean"})," | ",(0,o.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Provide a function to validate the value of the option."}),"\n",(0,o.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,o.jsxs)(n.p,{children:["\u2022 ",(0,o.jsx)(n.strong,{children:"value"}),": ",(0,o.jsx)(n.code,{children:"TCoerce"})]}),"\n",(0,o.jsx)(n.p,{children:"Coerced value of the option"}),"\n",(0,o.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"boolean"})," | ",(0,o.jsx)(n.code,{children:"string"})]}),"\n",(0,o.jsx)(n.p,{children:"If the value is valid, return true. If the value is invalid, return false or a string with an error message."}),"\n",(0,o.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/agentender/cli-forge/blob/e5e7380e743a6609827080c07da24408209a77de/packages/parser/src/lib/option-types/common.ts#L16",children:"packages/parser/src/lib/option-types/common.ts:16"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},43023:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var o=i(63696);const r={},s=o.createContext(r);function l(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);